{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\030879522\\\\OneDrive - csulb\\\\Desktop\\\\AI\\\\hackathon_coqu\\\\Client\\\\src\\\\question\\\\QuizApp.js\";\nimport React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport QuestionPage from './QuestionPage';\n// import Modal from './Modal';\nimport Results from './Results';\nimport shuffleQuestions from '../helpers/shuffleQuestions';\nimport QUESTION_DATA from '../data/quiz-data';\nimport '../style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass QuizApp extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      ...this.getInitialState(this.props.totalQuestions)\n    };\n    this.handleAnswerClick = index => e => {\n      const {\n        questions,\n        step,\n        userAnswers\n      } = this.state;\n      // const isCorrect = questions[0].correct === index;\n      const isCorrect = true;\n      // console.log(questions[0].answers[index].props.children);\n      const currentStep = step - 1;\n      const tries = 0;\n      if (isCorrect && e.target.nodeName === 'LI') {\n        // Prevent other answers from being clicked after correct answer is clicked\n        e.target.parentNode.style.pointerEvents = 'none';\n        e.target.classList.add('right');\n        const obj = {};\n        obj[questions[0].index] = questions[0].answers[index].props.children;\n        userAnswers.push(obj);\n        // userAnswers[`${questions[0].index}`] = questions[0].answers[index].props.children;\n        //   userAnswers[currentStep] = {\n        //     // tries: tries + 1\n        //   };\n\n        this.setState({\n          userAnswers: userAnswers\n        });\n        console.log(userAnswers);\n\n        //   setTimeout(() => this.showModal(tries), 750);\n\n        setTimeout(this.nextStep, 2750);\n      } else if (e.target.nodeName === 'LI') {\n        e.target.style.pointerEvents = 'none';\n        e.target.classList.add('wrong');\n\n        //   userAnswers[currentStep] = {\n        //     tries: tries + 1\n        //   };\n\n        this.setState({\n          userAnswers: userAnswers\n        });\n      }\n    };\n    this.handleEnterPress = index => e => {\n      if (e.keyCode === 13) {\n        this.handleAnswerClick(index)(e);\n      }\n    };\n    //   showModal = (tries) => {\n    //     let praise;\n    //     let points;\n    //     switch (tries) {\n    //       case 0: {\n    //         praise = '1st Try!';\n    //         points = '+10';\n    //         break;\n    //       }\n    //       case 1: {\n    //         praise = '2nd Try!';\n    //         points = '+5';\n    //         break;\n    //       }\n    //       case 2: {\n    //         praise = 'Correct!';\n    //         points = '+2';\n    //         break;\n    //       }\n    //       default: {\n    //         praise = 'Correct!';\n    //         points = '+1';\n    //       }\n    //     }\n    //     this.setState({\n    //       modal: {\n    //         state: 'show',\n    //         praise,\n    //         points\n    //       }\n    //     });\n    //   };\n    this.nextStep = () => {\n      const {\n        questions,\n        userAnswers,\n        step,\n        score\n      } = this.state;\n      const restOfQuestions = questions.slice(1);\n      const currentStep = step - 1;\n      const tries = 0;\n      this.setState({\n        step: step + 1,\n        score: this.updateScore(tries, score),\n        questions: restOfQuestions,\n        modal: {\n          state: 'hide'\n        }\n      });\n    };\n    this.restartQuiz = () => {\n      this.setState({\n        ...this.getInitialState(this.props.totalQuestions)\n      });\n    };\n  }\n  getInitialState() {\n    let totalQuestions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n    totalQuestions = Math.min(totalQuestions, QUESTION_DATA.length);\n    const QUESTIONS = shuffleQuestions(QUESTION_DATA).slice(0, totalQuestions);\n    return {\n      questions: QUESTIONS,\n      totalQuestions: totalQuestions,\n      userAnswers: [],\n      step: 1,\n      score: 0,\n      modal: {\n        state: 'hide',\n        praise: '',\n        points: ''\n      }\n    };\n  }\n  updateScore(tries, score) {\n    switch (tries) {\n      case 1:\n        return score + 10;\n      case 2:\n        return score + 5;\n      case 3:\n        return score + 2;\n      default:\n        return score + 1;\n    }\n  }\n  render() {\n    const {\n      step,\n      questions,\n      userAnswers,\n      totalQuestions,\n      score,\n      modal\n    } = this.state;\n    if (step >= totalQuestions + 1) {\n      return /*#__PURE__*/_jsxDEV(Results, {\n        score: score,\n        restartQuiz: this.restartQuiz,\n        userAnswers: userAnswers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(QuestionPage, {\n        step: step,\n        questions: questions,\n        totalQuestions: totalQuestions,\n        score: score,\n        handleAnswerClick: this.handleAnswerClick,\n        handleEnterPress: this.handleEnterPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this);\n  }\n}\nQuizApp.propTypes = {\n  totalQuestions: PropTypes.number.isRequired\n};\nexport default QuizApp;","map":{"version":3,"names":["React","Fragment","Component","PropTypes","QuestionPage","Results","shuffleQuestions","QUESTION_DATA","jsxDEV","_jsxDEV","QuizApp","constructor","arguments","state","getInitialState","props","totalQuestions","handleAnswerClick","index","e","questions","step","userAnswers","isCorrect","currentStep","tries","target","nodeName","parentNode","style","pointerEvents","classList","add","obj","answers","children","push","setState","console","log","setTimeout","nextStep","handleEnterPress","keyCode","score","restOfQuestions","slice","updateScore","modal","restartQuiz","length","undefined","Math","min","QUESTIONS","praise","points","render","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","number","isRequired"],"sources":["C:/Users/030879522/OneDrive - csulb/Desktop/AI/hackathon_coqu/Client/src/question/QuizApp.js"],"sourcesContent":["import React, { Fragment, Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport QuestionPage from './QuestionPage';\r\n// import Modal from './Modal';\r\nimport Results from './Results';\r\nimport shuffleQuestions from '../helpers/shuffleQuestions';\r\nimport QUESTION_DATA from '../data/quiz-data';\r\nimport '../style.css';\r\n\r\nclass QuizApp extends Component {\r\n  state = {\r\n    ...this.getInitialState(this.props.totalQuestions)\r\n  };\r\n\r\n  static propTypes = {\r\n    totalQuestions: PropTypes.number.isRequired\r\n  };\r\n\r\n  getInitialState(totalQuestions=5) {\r\n    totalQuestions = Math.min(totalQuestions, QUESTION_DATA.length);\r\n    const QUESTIONS = shuffleQuestions(QUESTION_DATA).slice(0, totalQuestions);\r\n\r\n    return {\r\n      questions: QUESTIONS,\r\n      totalQuestions: totalQuestions,\r\n      userAnswers: [],\r\n      step: 1,\r\n      score: 0,\r\n      modal: {\r\n        state: 'hide',\r\n        praise: '',\r\n        points: ''\r\n      }\r\n    };\r\n  }\r\n\r\n  handleAnswerClick = (index) => (e) => {\r\n    const { questions, step, userAnswers } = this.state;\r\n    // const isCorrect = questions[0].correct === index;\r\n    const isCorrect = true;\r\n    // console.log(questions[0].answers[index].props.children);\r\n    const currentStep = step - 1;\r\n    const tries = 0;\r\n\r\n    if (isCorrect && e.target.nodeName === 'LI') {\r\n      // Prevent other answers from being clicked after correct answer is clicked\r\n      e.target.parentNode.style.pointerEvents = 'none';\r\n\r\n      e.target.classList.add('right');\r\n      const obj ={}\r\n      obj[questions[0].index] = questions[0].answers[index].props.children;\r\n      userAnswers.push(obj);\r\n        // userAnswers[`${questions[0].index}`] = questions[0].answers[index].props.children;\r\n    //   userAnswers[currentStep] = {\r\n    //     // tries: tries + 1\r\n    //   };\r\n\r\n      this.setState({\r\n        userAnswers: userAnswers\r\n      });\r\n      console.log(userAnswers)\r\n\r\n    //   setTimeout(() => this.showModal(tries), 750);\r\n\r\n      setTimeout(this.nextStep, 2750);\r\n    }\r\n\r\n    else if (e.target.nodeName === 'LI') {\r\n      e.target.style.pointerEvents = 'none';\r\n      e.target.classList.add('wrong');\r\n\r\n    //   userAnswers[currentStep] = {\r\n    //     tries: tries + 1\r\n    //   };\r\n\r\n      this.setState({\r\n        userAnswers: userAnswers\r\n      });\r\n    }\r\n  };\r\n\r\n  handleEnterPress = (index) => (e) => {\r\n    if (e.keyCode === 13) {\r\n      this.handleAnswerClick(index)(e);\r\n    }\r\n  };\r\n\r\n//   showModal = (tries) => {\r\n//     let praise;\r\n//     let points;\r\n\r\n//     switch (tries) {\r\n//       case 0: {\r\n//         praise = '1st Try!';\r\n//         points = '+10';\r\n//         break;\r\n//       }\r\n//       case 1: {\r\n//         praise = '2nd Try!';\r\n//         points = '+5';\r\n//         break;\r\n//       }\r\n//       case 2: {\r\n//         praise = 'Correct!';\r\n//         points = '+2';\r\n//         break;\r\n//       }\r\n//       default: {\r\n//         praise = 'Correct!';\r\n//         points = '+1';\r\n//       }\r\n//     }\r\n\r\n//     this.setState({\r\n//       modal: {\r\n//         state: 'show',\r\n//         praise,\r\n//         points\r\n//       }\r\n//     });\r\n//   };\r\n\r\n  nextStep = () => {\r\n    const { questions, userAnswers, step, score } = this.state;\r\n    const restOfQuestions = questions.slice(1);\r\n    const currentStep = step - 1;\r\n    const tries = 0;\r\n\r\n    this.setState({\r\n      step: step + 1,\r\n      score: this.updateScore(tries, score),\r\n      questions: restOfQuestions,\r\n      modal: {\r\n        state: 'hide'\r\n      }\r\n    });\r\n  };\r\n\r\n  updateScore(tries, score) {\r\n    switch (tries) {\r\n      case 1: return score + 10;\r\n      case 2: return score + 5;\r\n      case 3: return score + 2;\r\n      default: return score + 1;\r\n    }\r\n  }\r\n\r\n  restartQuiz = () => {\r\n    this.setState({\r\n      ...this.getInitialState(this.props.totalQuestions)\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { step, questions, userAnswers, totalQuestions, score, modal } = this.state;\r\n    if (step >= totalQuestions + 1) {\r\n        return (\r\n          <Results\r\n            score={score}\r\n            restartQuiz={this.restartQuiz}\r\n            userAnswers={userAnswers}\r\n          />\r\n        );\r\n      } \r\n      else return (\r\n      <Fragment>\r\n        <QuestionPage\r\n          step={step}\r\n          questions={questions}\r\n          totalQuestions={totalQuestions}\r\n          score={score}\r\n          handleAnswerClick={this.handleAnswerClick}\r\n          handleEnterPress={this.handleEnterPress}\r\n        />\r\n        {/* { modal.state === 'show' && <Modal modal={modal} /> } */}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuizApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}